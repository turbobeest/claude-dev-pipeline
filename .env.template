# =============================================================================
# Claude Dev Pipeline - Environment Configuration Template
# =============================================================================
# 
# Copy this file to .env and configure with your values
# All variables are required unless marked as optional
#
# Usage:
#   cp .env.template .env
#   Edit .env with your values
#   Run: source .env (or let setup.sh handle it)
#
# =============================================================================

# -----------------------------------------------------------------------------
# GitHub Configuration
# -----------------------------------------------------------------------------
# Your GitHub username or organization name
GITHUB_ORG=your-github-username

# Repository name for the pipeline (if storing remotely)
GITHUB_REPO=claude-dev-pipeline

# Branch to use for pipeline resources
GITHUB_BRANCH=main

# GitHub Personal Access Token (optional - for private repos)
# Required permissions: repo, read:org, workflow
# Generate at: https://github.com/settings/tokens
# GITHUB_TOKEN=ghp_xxxxxxxxxxxxxxxxxxxx

# -----------------------------------------------------------------------------
# Installation Configuration
# -----------------------------------------------------------------------------
# Installation location: "global" (~/.claude) or "project" (.claude in current repo)
INSTALL_LOCATION=project

# Whether to install hooks (true/false)
INSTALL_HOOKS=true

# Whether to install external tools (TaskMaster, OpenSpec)
INSTALL_TOOLS=true

# -----------------------------------------------------------------------------
# Pipeline Configuration
# -----------------------------------------------------------------------------
# Pipeline version
PIPELINE_VERSION=3.0

# Activation mode: "codeword" or "traditional"
ACTIVATION_MODE=codeword

# Automation level: percentage of automation (e.g., 95)
AUTOMATION_LEVEL=95

# Manual gate requirements (comma-separated)
MANUAL_GATES="Pipeline Start,Implementation Start,Deployment Approval"

# -----------------------------------------------------------------------------
# Worktree Configuration
# -----------------------------------------------------------------------------
# Enable worktree isolation for all development
USE_WORKTREES=true

# Worktree base directory (relative to project root)
WORKTREE_BASE_DIR=.worktrees

# Auto-cleanup completed worktrees
WORKTREE_AUTO_CLEANUP=true

# Maximum parallel worktrees
MAX_PARALLEL_WORKTREES=10

# -----------------------------------------------------------------------------
# TaskMaster & OpenSpec Configuration
# -----------------------------------------------------------------------------
# TaskMaster executable path (auto-detected if in PATH)
# TASKMASTER_PATH=/usr/local/bin/task-master

# TaskMaster GitHub Token (can be same as GITHUB_TOKEN if permissions match)
# Required permissions: repo, project, issues, pull_requests
# TASKMASTER_GITHUB_TOKEN=ghp_xxxxxxxxxxxxxxxxxxxx

# Claude API Key for TaskMaster's AI features
# Get from: https://console.anthropic.com/settings/keys
# ANTHROPIC_API_KEY=sk-ant-api03-xxxxxxxxxxxxxxxxxxxx

# OpenSpec executable path (auto-detected if in PATH)
# OPENSPEC_PATH=/usr/local/bin/openspec

# Git executable path (if not in PATH)
# GIT_PATH=/usr/bin/git

# -----------------------------------------------------------------------------
# Logging Configuration
# -----------------------------------------------------------------------------
# Log level: DEBUG, INFO, WARN, ERROR
LOG_LEVEL=INFO

# Log directory (relative to CLAUDE_DIR)
LOG_DIR=logs

# Enable JSON logging for machine parsing
JSON_LOGGING=false

# Log rotation: max size in MB
LOG_MAX_SIZE=10

# Log retention: days to keep
LOG_RETENTION_DAYS=30

# -----------------------------------------------------------------------------
# Hook Configuration
# -----------------------------------------------------------------------------
# Hook timeout in seconds
HOOK_TIMEOUT=10

# Enable hook debugging output
HOOK_DEBUG=false

# Hook execution mode: "strict" or "permissive"
HOOK_MODE=strict

# -----------------------------------------------------------------------------
# State Management
# -----------------------------------------------------------------------------
# State file backup count
STATE_BACKUP_COUNT=5

# Enable state validation on every update
STATE_VALIDATION=true

# State file lock timeout (seconds)
STATE_LOCK_TIMEOUT=30

# -----------------------------------------------------------------------------
# Testing Configuration
# -----------------------------------------------------------------------------
# Test mode: "unit", "integration", "e2e", or "all"
TEST_MODE=all

# Enable test coverage reporting
TEST_COVERAGE=true

# Test data directory
TEST_DATA_DIR=tests/fixtures

# Parallel test execution
PARALLEL_TESTS=true

# -----------------------------------------------------------------------------
# Performance Configuration
# -----------------------------------------------------------------------------
# Enable caching for frequently accessed data
ENABLE_CACHE=true

# Cache TTL in seconds
CACHE_TTL=300

# Maximum cache size in MB
CACHE_MAX_SIZE=50

# -----------------------------------------------------------------------------
# Security Configuration
# -----------------------------------------------------------------------------
# Enable audit logging
AUDIT_LOGGING=true

# Sandbox mode for testing (restricts file system access)
SANDBOX_MODE=false

# Input validation level: "strict", "moderate", "minimal"
VALIDATION_LEVEL=strict

# -----------------------------------------------------------------------------
# Notification Configuration (optional)
# -----------------------------------------------------------------------------
# Enable notifications for phase completions
# ENABLE_NOTIFICATIONS=false

# Notification method: "terminal", "system", "slack"
# NOTIFICATION_METHOD=terminal

# Slack webhook URL (if using Slack notifications)
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/xxx/yyy/zzz

# -----------------------------------------------------------------------------
# Development Configuration
# -----------------------------------------------------------------------------
# Development mode (enables additional debugging features)
DEV_MODE=false

# Dry run mode (simulates operations without making changes)
DRY_RUN=false

# Verbose output
VERBOSE=false

# -----------------------------------------------------------------------------
# Custom Configuration
# -----------------------------------------------------------------------------
# Add any custom configuration variables below
# CUSTOM_VAR_1=value1
# CUSTOM_VAR_2=value2